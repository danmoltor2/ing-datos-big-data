version: '3.7'

# docker-compose down -v
# docker-compose up -d
# docker exec -it hiveserver2 beeline -u jdbc:hive2://hiveserver2:10000
# show databases;
# create database prueba;
# drop database if exists prueba;

networks:
  trino_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  postgres-db:
  warehouse:

services:
  # PostgreSQL como metastore de Hive
  postgres:
    image: postgres:15
    restart: unless-stopped
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: password
      POSTGRES_DB: metastore_db
    ports:
      - '5432:5432'
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      trino_network:
        ipv4_address: 172.21.0.7

  # Metastore de Hive
  metastore:
    image: apache/hive:4.0.1
    depends_on:
      - postgres
    restart: unless-stopped
    container_name: metastore
    hostname: metastore
    environment:
      DB_DRIVER: 'postgres'
      SERVICE_NAME: 'metastore'
      HIVE_SCHEMA_TOOL_DB_TYPE: 'postgres'
      SERVICE_OPTS: '-Xmx1G -Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver 
                    -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore_db 
                    -Djavax.jdo.option.ConnectionUserName=hive
                    -Djavax.jdo.option.ConnectionPassword=password'
    ports:
      - '9083:9083'
    volumes:
      - warehouse:/opt/hive/data/warehouse
      - ./hive/conf/hive-site.xml:/opt/hive/conf/hive-site.xml
      - ./hive/conf/postgresql-42.3.8.jar:/opt/hive/lib/postgresql-42.3.8.jar
    command: ["/bin/bash", "-c", "export HADOOP_CLASSPATH=$${HADOOP_CLASSPATH}:/opt/hive/lib/postgresql-42.3.8.jar && sleep 15 && /opt/hive/bin/schematool -verbose -dbType postgres -initSchema && hive --service metastore"]
    networks:
      trino_network:
        ipv4_address: 172.21.0.8

  # HiveServer2
  hiveserver2:
    image: apache/hive:4.0.1
    restart: unless-stopped
    depends_on:
      - metastore
    container_name: hiveserver2
    hostname: hiveserver2
    environment:
      SERVICE_NAME: 'hiveserver2'
      HIVE_SERVER2_THRIFT_PORT: 10000
      HIVE_METASTORE_URI: 'thrift://metastore:9083'
      DB_DRIVER: 'postgres'
      HIVE_SCHEMA_TOOL_DB_TYPE: 'postgres'
      SERVICE_OPTS: '-Xmx1G -Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver 
                    -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore_db 
                    -Djavax.jdo.option.ConnectionUserName=hive
                    -Djavax.jdo.option.ConnectionPassword=password'
    ports:
      - '10000:10000'
      - '10002:10002'
    volumes:
      - warehouse:/opt/hive/data/warehouse
      - ./hive/conf/hive-site.xml:/opt/hive/conf/hive-site.xml
      - ./hive/conf/postgresql-42.3.8.jar:/opt/hive/lib/postgresql-42.3.8.jar
    networks:
      trino_network:
        ipv4_address: 172.21.0.9

  # Trino
  # trino:
  #   image: trinodb/trino:472
  #   restart: unless-stopped
  #   container_name: trino
  #   hostname: trino
  #   user: root
  #   environment:
  #     - TRINO_CONFIG_DIR=/etc/trino
  #   volumes:
  #     - ./trino/conf:/etc/trino
  #     - ./trino/conf/catalog:/etc/trino/catalog  # <-- MONTA EL CONECTOR DE HIVE
  #     - warehouse:/opt/hive/data/warehouse
  #     - ./hive/conf/hive-site.xml:/etc/trino/hive-site.xml # <-- Copia hive-site.xml directamente

  #   depends_on:
  #     - hiveserver2
  #   ports:
  #     - '8080:8080'
    
  #   networks:
  #     trino_network:
  #       ipv4_address: 172.21.0.10
